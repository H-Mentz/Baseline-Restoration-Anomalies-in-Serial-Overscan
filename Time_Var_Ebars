# E-BAR SUBPLOTS PER INCREASING EXPOSURE TIME 

from lsst.daf.persistence import Butler
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rcParams
import sys


def get_info(butler, run, raft, sensor):
    exp_times = butler.queryMetadata('raw', ['expTime','expId'], dataId={'run': run, 'imageType': 'FLAT', 'raftName': raft,'detectorName': sensor})
    x = sorted(exp_times)[-20::2]       #LAST 20TH ELEMENTS; EVERY OTHER ELEMENT B/C FLATS COME IN PAIRS
    return x 


def print_ebar(exposures, info, title_prefix, title_plots):
    fig, axs = plt.subplots(2,5,figsize=(50,18))
    det = exposures[0].getDetector()
    amp = det[-6]
    for exposure, ax, (expTime, expId) in zip(exposures, axs.ravel(), info):
    fig.suptitle(f'{title_prefix} - {amp.getName()}', fontsize=20)
    plt.savefig(title_plots, facecolor='w', bbox_inches = 'tight', pad_inches = 1)
    fig.show()
    return fig, axs
        

def plot_ebars(butler, run, raft, sensor):
    info = get_info(butler, run, raft, sensor)
    exposures = []
    for expTime, expId in info:
        exp = butler.get('raw', dataId={'expId': expId,'run': run,'raftName': raft,'detectorName': sensor})
        exposures.append(exp)
    det = exposures[0].getDetector()
    title_subplots = f'{run}_{det.getSerial()}_{raft}_{sensor}'
    title_png = f'plots/error_bar_{run}_{expId}_{det.getSerial()}_{raft}_{sensor}.png'
    e_bar = print_ebar(exposures, info, title_subplots, title_png) 
    return e_bar

  
    
repo = '/lsstdata/offline/teststand/BOT/gen2repo/'
butler = Butler(repo)
run = '12549'
raft = 'R02'
sensor = 'S10'
plot_ebars(butler, run, raft, sensor)
